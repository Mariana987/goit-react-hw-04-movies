{"version":3,"sources":["servises/movieFetch.js","components/HomePage/HomePage.js","components/MoviesPage/MoviesPage.js","components/MovieDetailsPage/MovieDetailsPage.js","views/NotFoundView.js","components/Navigation/Navigation.js","App.js","index.js"],"names":["myKey","baseUrl","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","HomePage","useRouteMatch","useState","popularMovies","setPopularMovies","useEffect","then","results","map","movies","to","id","title","MoviesPage","MoviesPageDetails","match","movieId","history","location","params","movieDetails","setMovieDetails","src","poster_path","alt","NotFoundView","Navigation","exact","App","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"+VAAMA,EAAQ,mCACRC,EAAU,+B,SAIDC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAE+BD,EAASE,OAFxC,gDAEiDC,QAAQC,OAAO,IAAIC,MAAM,cAF1E,mF,mCCCe,SAASC,IACJC,cAARV,IAAR,IAGA,EAA0CW,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAQA,OALAC,qBAAU,WDFHZ,MAAM,GAAD,OAAIL,EAAJ,wCAA2CD,IAASmB,MAAK,SAAAZ,GAAQ,OACzEA,EAASE,UCEKU,MAAK,SAAAZ,GACfU,EAAiBV,EAASa,cAE/B,IAEC,8BACKJ,GAAiBA,EAAcK,KAC3B,SAAAC,GAAM,OAAI,6BACP,cAAC,IAAD,CAAMC,GAAE,WAAMD,EAAOE,IAArB,SAA4BF,EAAOG,SADnBH,EAAOE,SCrB5B,SAASE,IACpB,OACI,0dCKO,SAASC,EAAT,GAA0D,IAA7BC,EAA4B,EAA5BA,MAElCC,GAF8D,EAArBC,QAAqB,EAAZC,SAExCH,EAAMI,OAAO5B,KAC7B,EAAwCW,mBAAS,MAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KAUA,OATAhB,qBAAU,WHWP,IAA2BM,EGP1B,OHO0BA,EGVRK,EHWf3B,EAAuB,GAAD,OAAID,EAAJ,kBAAqBuB,EAArB,oBAAmCxB,KGXjCmB,MAAK,SAAAZ,GAC5B2B,EAAgB3B,MAEb,eAGR,CAACsB,IAGA,8BACKI,GAAgB,mCACb,qBAAKE,IAAKF,EAAaG,YAAaC,IAAKJ,EAAaR,Y,kBCvBvD,SAASa,IACpB,OAAO,+CCAX,IAUeC,EAVI,kBACf,gCACI,cAAC,IAAD,CAASC,OAAK,EAACjB,GAAG,IAAlB,wBACA,cAAC,IAAD,CAASA,GAAG,UAAZ,yBACA,cAAC,IAAD,CAASA,GAAG,WAAZ,oCC8COkB,MAtCf,WACE,OACE,qCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIF,OAAK,EAArB,SACE,cAAC3B,EAAD,MAGF,cAAC,IAAD,CAAO6B,KAAK,UAAUF,OAAK,EAA3B,SACE,cAACd,EAAD,MAGF,cAAC,IAAD,CAAOgB,KAAK,YACVC,OAAQ,SAAAC,GACN,OAAO,cAAC,EAAD,eAAsBA,OAajC,cAAC,IAAD,UACE,cAACN,EAAD,aCpCVO,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAIJC,SAASC,eAAe,W","file":"static/js/main.fbff0e7b.chunk.js","sourcesContent":["const myKey = '82247949d6984757ff30e3696af16cf8'\r\nconst baseUrl = 'https://api.themoviedb.org/3'\r\n\r\n\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n    const response = await fetch(url, config);\r\n    return response.ok ? await response.json() : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchMovies() {\r\n    return fetch(`${baseUrl}/trending/movie/week?api_key=${myKey}`).then(response =>\r\n        response.json(),\r\n    )\r\n}\r\n\r\n\r\n\r\nexport function FetchSearchMovies(query) {\r\n    return fetchWithErrorHandling(`${baseUrl}/search/movie?query=${query}&api_key=${myKey}`);\r\n}\r\n\r\nexport function FetchMovieDetails(id) {\r\n    return fetchWithErrorHandling(`${baseUrl}/movie/${id}?api_key=${myKey}`);\r\n}\r\n\r\nexport function FetchMovieCast(id) {\r\n    return fetchWithErrorHandling(`${baseUrl}/movie/${id}/credits?api_key=${myKey}`);\r\n}\r\n\r\nexport function FetchMovieReviews(id) {\r\n    return fetchWithErrorHandling(`${baseUrl}/movie/${id}/reviews?api_key=${myKey}`);\r\n}","import { useState, useEffect } from \"react\";\r\nimport { fetchMovies } from '../../servises/movieFetch';\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function HomePage() {\r\n    const { url } = useRouteMatch();\r\n\r\n\r\n    const [popularMovies, setPopularMovies] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchMovies().then(response => {\r\n            setPopularMovies(response.results);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {popularMovies && popularMovies.map\r\n                (movies => <li key={movies.id}>\r\n                    <Link to={`/${movies.id}`}>{movies.title}</Link>\r\n                </li>)}\r\n        </div>\r\n    )\r\n}","export default function MoviesPage() {\r\n    return (\r\n        <div>\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Autem nobis iure, at corrupti eius repellat maxime aperiam illum nemo voluptatem facilis architecto rem labore. Veniam sapiente dolores hic provident laborum!Lorem\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis, tenetur cumque beatae obcaecati dolorum deleniti cum fugit quas ab sunt pariatur iure ipsa facilis ex, quisquam eveniet quidem cupiditate praesentium.\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FetchMovieDetails } from '../../servises/movieFetch';\r\n\r\n\r\n\r\n\r\nexport default function MoviesPageDetails({ match, history, location }) {\r\n    // const { movieId } = useParams();\r\n    const movieId = match.params.url;\r\n    const [movieDetails, setMovieDetails] = useState(null)\r\n    useEffect(() => {\r\n        FetchMovieDetails(movieId).then(response => {\r\n            setMovieDetails(response);\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [movieId])\r\n\r\n    return (\r\n        <div>\r\n            {movieDetails && <>\r\n                <img src={movieDetails.poster_path} alt={movieDetails.title} />\r\n\r\n            </>}\r\n        </div>\r\n    )\r\n}","export default function NotFoundView() {\r\n    return <h1>\r\n        404 NOT FOUND\r\n    </h1>\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nconst Navigation = () =>\r\n    <nav>\r\n        <NavLink exact to='/'> Home Page</NavLink>\r\n        <NavLink to='/movies'>Movie Page </NavLink>\r\n        <NavLink to='/details'> Movie Detail Page</NavLink>\r\n        {/* <NavLink to='/cast'>Cast </NavLink>\r\n        <NavLink to='/reviews'>Review </NavLink> */}\r\n\r\n    </nav>;\r\n\r\nexport default Navigation","\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';\nimport MoviesPage from './components/MoviesPage/MoviesPage';\nimport MovieDetailsPage from './components/MovieDetailsPage/MovieDetailsPage';\nimport Cast from './components/Cast/Cast';\nimport Reviews from './components/Reviews/Reviews';\nimport Container from './components/Container/Container';\nimport NotFoundView from './views/NotFoundView';\n\n\nimport Navigation from './components/Navigation/Navigation'\nfunction App() {\n  return (\n    <>\n      <Navigation></Navigation>\n\n      <Switch>\n        <Route path='/' exact >\n          <HomePage />\n        </Route>\n\n        <Route path='/movies' exact>\n          <MoviesPage />\n        </Route>\n\n        <Route path='/:movieId'\n          render={props => {\n            return <MovieDetailsPage {...props} />;\n          }} />\n\n        {/* <Route path='/cast'>\n        <Cast />\n      </Route>\n\n      <Route path='/reviews'>\n        <Reviews />\n      </Route> */}\n\n\n\n        <Route >\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}